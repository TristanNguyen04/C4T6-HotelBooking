name: Run Backend Tests

on:
    pull_request:
        branches: [ main , backend, frontend, develop, merged-backend-frontend, backend|merge-features]
    push:
        branches: [ main , backend, frontend, develop, merged-backend-frontend, backend|merge-features]

jobs:
  test-server:
    name: Test Backend
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: HRqYmThhkyJFSmcLZTYblYZFXsqSFetA
          POSTGRES_DB: fuzzdb
        ports:
          - 18564:18564
        options: >-
          --health-cmd="pg_isready"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    defaults:
      run:
        working-directory: apps/server

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Clean and install fresh dependencies
        run: |
          rm -rf node_modules package-lock.json
          npm install
        
      - name: Install backend dependencies
        run: npm ci

      - name: Wait for PostgresSQL to be ready
        run: |
          until pg_isready -h mainline.proxy.rlwy.net -p 18564 -U postgres; do
            echo "Waiting for PostgresSQL..."
            sleep 2
          done
      - name: Generate Prisma Client
        run: npx prisma generate
      
      - name: Run Prisma Generate
        run: npx prisma migrate deploy
        env:
          DATABASE_URL: postgresql://postgres:HRqYmThhkyJFSmcLZTYblYZFXsqSFetA@mainline.proxy.rlwy.net:18564/fuzzdb

      - name: Run backend tests
        run: npm test
        env:
          DATABASE_URL: postgresql://postgres:HRqYmThhkyJFSmcLZTYblYZFXsqSFetA@mainline.proxy.rlwy.net:18564/fuzzdb
