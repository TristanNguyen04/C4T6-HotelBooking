import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import React from 'react';
import { formatPrice } from '../../utils/pricing';
const BookingConfirmation = ({ bookingDetails, onConfirm, onCancel, loading = false }) => {
    const { priceBreakdown, hotelName, roomDescription, checkin, checkout, guests } = bookingDetails;
    return (_jsx("div", { className: "fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50", children: _jsx("div", { className: "bg-white rounded-lg max-w-lg w-full mx-4 max-h-[90vh] overflow-y-auto", children: _jsxs("div", { className: "p-6", children: [_jsx("h2", { className: "text-2xl font-bold text-gray-900 mb-4", children: "Confirm Your Booking" }), _jsxs("div", { className: "bg-gray-50 rounded-lg p-4 mb-6", children: [_jsx("h3", { className: "font-semibold text-gray-900", children: hotelName }), _jsx("p", { className: "text-gray-600", children: roomDescription }), _jsxs("div", { className: "mt-2 space-y-1 text-sm text-gray-600", children: [_jsxs("p", { children: ["Check-in: ", new Date(checkin).toLocaleDateString()] }), _jsxs("p", { children: ["Check-out: ", new Date(checkout).toLocaleDateString()] }), _jsxs("p", { children: ["Guests: ", guests] }), _jsxs("p", { children: ["Nights: ", priceBreakdown.nights] })] })] }), _jsxs("div", { className: "border rounded-lg p-4 mb-6", children: [_jsx("h4", { className: "font-semibold text-gray-900 mb-3", children: "Price Breakdown" }), _jsxs("div", { className: "space-y-2", children: [_jsxs("div", { className: "flex justify-between", children: [_jsxs("span", { className: "text-gray-600", children: ["Base rate (", priceBreakdown.nights, " nights)"] }), _jsx("span", { children: formatPrice(priceBreakdown.base_rate_in_currency, priceBreakdown.currency) })] }), _jsxs("div", { className: "flex justify-between", children: [_jsx("span", { className: "text-gray-600", children: "Taxes & fees (included)" }), _jsx("span", { children: formatPrice(priceBreakdown.included_taxes_and_fees_total_in_currency, priceBreakdown.currency) })] }), _jsx("hr", { className: "my-2" }), _jsxs("div", { className: "flex justify-between font-semibold", children: [_jsx("span", { children: "Subtotal" }), _jsx("span", { children: formatPrice(priceBreakdown.base_rate_in_currency + priceBreakdown.included_taxes_and_fees_total_in_currency, priceBreakdown.currency) })] }), priceBreakdown.excluded_taxes_and_fees_total_in_currency > 0 && (_jsxs(_Fragment, { children: [_jsxs("div", { className: "flex justify-between text-orange-600", children: [_jsx("span", { children: "Additional fees (pay at hotel)" }), _jsx("span", { children: formatPrice(priceBreakdown.excluded_taxes_and_fees_total_in_currency, priceBreakdown.currency) })] }), _jsx("div", { className: "text-xs text-gray-500", children: "*Additional fees are paid directly to the hotel" })] })), _jsx("hr", { className: "my-2" }), _jsxs("div", { className: "flex justify-between text-lg font-bold", children: [_jsx("span", { children: "Total" }), _jsx("span", { children: formatPrice(priceBreakdown.total_price, priceBreakdown.currency) })] })] })] }), _jsxs("div", { className: "flex space-x-3", children: [_jsx("button", { onClick: onCancel, className: "flex-1 px-4 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors", disabled: loading, children: "Cancel" }), _jsx("button", { onClick: onConfirm, disabled: loading, className: "flex-1 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors disabled:opacity-50", children: loading ? 'Processing...' : 'Confirm Booking' })] })] }) }) }));
};
export default BookingConfirmation;
